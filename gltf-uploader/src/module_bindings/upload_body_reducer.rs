// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#![allow(unused, clippy::all)]
use spacetimedb_sdk::__codegen::{self as __sdk, __lib, __sats, __ws};

use super::db_vector_3_type::DbVector3;

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
pub(super) struct UploadBodyArgs {
    pub points: Vec<DbVector3>,
    pub indices: Vec<DbVector3>,
    pub name: String,
}

impl From<UploadBodyArgs> for super::Reducer {
    fn from(args: UploadBodyArgs) -> Self {
        Self::UploadBody {
            points: args.points,
            indices: args.indices,
            name: args.name,
        }
    }
}

impl __sdk::InModule for UploadBodyArgs {
    type Module = super::RemoteModule;
}

pub struct UploadBodyCallbackId(__sdk::CallbackId);

#[allow(non_camel_case_types)]
/// Extension trait for access to the reducer `upload_body`.
///
/// Implemented for [`super::RemoteReducers`].
pub trait upload_body {
    /// Request that the remote module invoke the reducer `upload_body` to run as soon as possible.
    ///
    /// This method returns immediately, and errors only if we are unable to send the request.
    /// The reducer will run asynchronously in the future,
    ///  and its status can be observed by listening for [`Self::on_upload_body`] callbacks.
    fn upload_body(
        &self,
        points: Vec<DbVector3>,
        indices: Vec<DbVector3>,
        name: String,
    ) -> __sdk::Result<()>;
    /// Register a callback to run whenever we are notified of an invocation of the reducer `upload_body`.
    ///
    /// Callbacks should inspect the [`__sdk::ReducerEvent`] contained in the [`super::ReducerEventContext`]
    /// to determine the reducer's status.
    ///
    /// The returned [`UploadBodyCallbackId`] can be passed to [`Self::remove_on_upload_body`]
    /// to cancel the callback.
    fn on_upload_body(
        &self,
        callback: impl FnMut(&super::ReducerEventContext, &Vec<DbVector3>, &Vec<DbVector3>, &String)
            + Send
            + 'static,
    ) -> UploadBodyCallbackId;
    /// Cancel a callback previously registered by [`Self::on_upload_body`],
    /// causing it not to run in the future.
    fn remove_on_upload_body(&self, callback: UploadBodyCallbackId);
}

impl upload_body for super::RemoteReducers {
    fn upload_body(
        &self,
        points: Vec<DbVector3>,
        indices: Vec<DbVector3>,
        name: String,
    ) -> __sdk::Result<()> {
        self.imp.call_reducer(
            "upload_body",
            UploadBodyArgs {
                points,
                indices,
                name,
            },
        )
    }
    fn on_upload_body(
        &self,
        mut callback: impl FnMut(&super::ReducerEventContext, &Vec<DbVector3>, &Vec<DbVector3>, &String)
            + Send
            + 'static,
    ) -> UploadBodyCallbackId {
        UploadBodyCallbackId(self.imp.on_reducer(
            "upload_body",
            Box::new(move |ctx: &super::ReducerEventContext| {
                let super::ReducerEventContext {
                    event:
                        __sdk::ReducerEvent {
                            reducer:
                                super::Reducer::UploadBody {
                                    points,
                                    indices,
                                    name,
                                },
                            ..
                        },
                    ..
                } = ctx
                else {
                    unreachable!()
                };
                callback(ctx, points, indices, name)
            }),
        ))
    }
    fn remove_on_upload_body(&self, callback: UploadBodyCallbackId) {
        self.imp.remove_on_reducer("upload_body", callback.0)
    }
}

#[allow(non_camel_case_types)]
#[doc(hidden)]
/// Extension trait for setting the call-flags for the reducer `upload_body`.
///
/// Implemented for [`super::SetReducerFlags`].
///
/// This type is currently unstable and may be removed without a major version bump.
pub trait set_flags_for_upload_body {
    /// Set the call-reducer flags for the reducer `upload_body` to `flags`.
    ///
    /// This type is currently unstable and may be removed without a major version bump.
    fn upload_body(&self, flags: __ws::CallReducerFlags);
}

impl set_flags_for_upload_body for super::SetReducerFlags {
    fn upload_body(&self, flags: __ws::CallReducerFlags) {
        self.imp.set_call_reducer_flags("upload_body", flags);
    }
}
